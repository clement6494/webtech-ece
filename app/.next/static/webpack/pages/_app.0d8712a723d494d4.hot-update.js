"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./node_modules/@supabase/auth-helpers-nextjs/dist/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/auth-helpers-nextjs/dist/index.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  createBrowserSupabaseClient: () => createBrowserSupabaseClient,\n  createMiddlewareSupabaseClient: () => createMiddlewareSupabaseClient,\n  createServerComponentSupabaseClient: () => createServerComponentSupabaseClient,\n  createServerSupabaseClient: () => createServerSupabaseClient4,\n  logger: () => log_default,\n  withApiAuth: () => withApiAuth,\n  withMiddlewareAuth: () => withMiddlewareAuth,\n  withPageAuth: () => withPageAuth\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_auth_helpers_shared4 = __webpack_require__(/*! @supabase/auth-helpers-shared */ \"./node_modules/@supabase/auth-helpers-shared/dist/index.mjs\");\n\n// src/constants.ts\nvar PKG_NAME = \"@supabase/auth-helpers-nextjs\";\nvar PKG_VERSION = \"0.5.2\";\n\n// src/middleware/withMiddlewareAuth.ts\nvar import_server = __webpack_require__(/*! next/server */ \"./node_modules/next/server.js\");\nvar import_auth_helpers_shared = __webpack_require__(/*! @supabase/auth-helpers-shared */ \"./node_modules/@supabase/auth-helpers-shared/dist/index.mjs\");\nvar NoPermissionError = class extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"NoPermissionError\";\n  }\n};\nvar withMiddlewareAuth = (options = {}) => async (req) => {\n  var _a;\n  try {\n    if (false) {}\n    const res = import_server.NextResponse.next();\n    const supabase = (0, import_auth_helpers_shared.createServerSupabaseClient)({\n      supabaseUrl: \"https://pvxlglzyrpzakeenslvv.supabase.co\",\n      supabaseKey: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB2eGxnbHp5cnB6YWtlZW5zbHZ2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2Njk5ODgwMzAsImV4cCI6MTk4NTU2NDAzMH0.kkMEtfpuA5zZfS9rd6dFw9Feja3DjpZyG50J-WggNTc\",\n      getCookie(name) {\n        var _a2;\n        const cookies = (0, import_auth_helpers_shared.parseCookies)((_a2 = req.headers.get(\"cookie\")) != null ? _a2 : \"\");\n        return cookies[name];\n      },\n      setCookie(name, value, options2) {\n        const newSessionStr = (0, import_auth_helpers_shared.serializeCookie)(name, value, {\n          ...options2,\n          httpOnly: false\n        });\n        res.headers.append(name, newSessionStr);\n      },\n      getRequestHeader: (key) => {\n        var _a2;\n        const header = (_a2 = req.headers.get(key)) != null ? _a2 : void 0;\n        return header;\n      },\n      options: {\n        global: {\n          headers: {\n            \"X-Client-Info\": `${PKG_NAME}@${PKG_VERSION}`\n          }\n        }\n      },\n      cookieOptions: options.cookieOptions\n    });\n    const {\n      data: { session },\n      error\n    } = await supabase.auth.getSession();\n    if (error) {\n      throw new Error(\n        `Authorization error, redirecting to login page: ${error.message}`\n      );\n    } else if (!session) {\n      throw new Error(\"No auth session, redirecting\");\n    } else if (options.authGuard && !await options.authGuard.isPermitted(session.user, supabase)) {\n      throw new NoPermissionError(\"User is not permitted, redirecting\");\n    }\n    return res;\n  } catch (err) {\n    let { redirectTo = \"/\" } = options;\n    if (err instanceof NoPermissionError && !!((_a = options == null ? void 0 : options.authGuard) == null ? void 0 : _a.redirectTo)) {\n      redirectTo = options.authGuard.redirectTo;\n    }\n    if (err instanceof Error) {\n      console.log(\n        `Could not authenticate request, redirecting to ${redirectTo}:`,\n        err\n      );\n    }\n    const redirectUrl = req.nextUrl.clone();\n    redirectUrl.pathname = redirectTo;\n    redirectUrl.searchParams.set(`redirectedFrom`, req.nextUrl.pathname);\n    return import_server.NextResponse.redirect(redirectUrl);\n  }\n};\n\n// src/utils/withPageAuth.ts\nvar import_auth_helpers_shared2 = __webpack_require__(/*! @supabase/auth-helpers-shared */ \"./node_modules/@supabase/auth-helpers-shared/dist/index.mjs\");\nfunction withPageAuth({\n  authRequired = true,\n  redirectTo = \"/\",\n  getServerSideProps = void 0,\n  cookieOptions = {}\n} = {}) {\n  return async (context) => {\n    var _a;\n    try {\n      if (!context.req.cookies) {\n        throw new import_auth_helpers_shared2.CookieNotParsed();\n      }\n      if (false) {}\n      const supabase = (0, import_auth_helpers_shared2.createServerSupabaseClient)({\n        supabaseUrl: \"https://pvxlglzyrpzakeenslvv.supabase.co\",\n        supabaseKey: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB2eGxnbHp5cnB6YWtlZW5zbHZ2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2Njk5ODgwMzAsImV4cCI6MTk4NTU2NDAzMH0.kkMEtfpuA5zZfS9rd6dFw9Feja3DjpZyG50J-WggNTc\",\n        getRequestHeader: (key) => context.req.headers[key],\n        getCookie(name) {\n          return context.req.cookies[name];\n        },\n        setCookie(name, value, options) {\n          var _a2, _b;\n          const newSetCookies = (0, import_auth_helpers_shared2.filterCookies)(\n            (0, import_auth_helpers_shared2.ensureArray)((_b = (_a2 = context.res.getHeader(\"set-cookie\")) == null ? void 0 : _a2.toString()) != null ? _b : []),\n            name\n          );\n          const newSessionStr = (0, import_auth_helpers_shared2.serializeCookie)(name, value, {\n            ...options,\n            httpOnly: false\n          });\n          context.res.setHeader(\"set-cookie\", [\n            ...newSetCookies,\n            newSessionStr\n          ]);\n        },\n        options: {\n          global: {\n            headers: {\n              \"X-Client-Info\": `${PKG_NAME}@${PKG_VERSION}`\n            }\n          }\n        },\n        cookieOptions\n      });\n      const {\n        data: { session },\n        error\n      } = await supabase.auth.getSession();\n      if (error) {\n        throw error;\n      }\n      if (authRequired && !session) {\n        throw new import_auth_helpers_shared2.AuthHelperError(\"Unauthenticated\", \"unauthenticated\");\n      }\n      let ret = { props: {} };\n      if (getServerSideProps) {\n        try {\n          ret = await getServerSideProps(context, supabase);\n        } catch (error2) {\n          ret = {\n            props: {\n              error: String(error2)\n            }\n          };\n        }\n      }\n      return {\n        ...ret,\n        props: {\n          initialSession: session,\n          user: (_a = session == null ? void 0 : session.user) != null ? _a : null,\n          ...ret.props\n        }\n      };\n    } catch (e) {\n      if (authRequired) {\n        return {\n          redirect: {\n            destination: redirectTo,\n            permanent: false\n          }\n        };\n      }\n      return { props: {} };\n    }\n  };\n}\n\n// src/utils/withApiAuth.ts\nvar import_auth_helpers_shared3 = __webpack_require__(/*! @supabase/auth-helpers-shared */ \"./node_modules/@supabase/auth-helpers-shared/dist/index.mjs\");\nfunction withApiAuth(handler, options = {}) {\n  return async (req, res) => {\n    try {\n      if (false) {}\n      const supabase = (0, import_auth_helpers_shared3.createServerSupabaseClient)({\n        supabaseUrl: \"https://pvxlglzyrpzakeenslvv.supabase.co\",\n        supabaseKey: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB2eGxnbHp5cnB6YWtlZW5zbHZ2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2Njk5ODgwMzAsImV4cCI6MTk4NTU2NDAzMH0.kkMEtfpuA5zZfS9rd6dFw9Feja3DjpZyG50J-WggNTc\",\n        getCookie(name) {\n          return req.cookies[name];\n        },\n        setCookie(name, value, options2) {\n          var _a, _b;\n          const newSetCookies = (0, import_auth_helpers_shared3.filterCookies)(\n            (0, import_auth_helpers_shared3.ensureArray)((_b = (_a = res.getHeader(\"set-cookie\")) == null ? void 0 : _a.toString()) != null ? _b : []),\n            name\n          );\n          const newSessionStr = (0, import_auth_helpers_shared3.serializeCookie)(name, value, {\n            ...options2,\n            httpOnly: false\n          });\n          res.setHeader(\"set-cookie\", [...newSetCookies, newSessionStr]);\n        },\n        getRequestHeader: (key) => {\n          const header = req.headers[key];\n          if (typeof header === \"number\") {\n            return String(header);\n          }\n          return header;\n        },\n        options: {\n          global: {\n            headers: {\n              \"X-Client-Info\": `${PKG_NAME}@${PKG_VERSION}`\n            }\n          }\n        },\n        cookieOptions: options.cookieOptions\n      });\n      const {\n        data: { session },\n        error\n      } = await supabase.auth.getSession();\n      if (error) {\n        throw error;\n      }\n      if (!session)\n        throw new import_auth_helpers_shared3.AuthHelperError(\"Unauthenticated\", \"unauthenticated\");\n      try {\n        await handler(req, res, supabase);\n      } catch (error2) {\n        res.status(500).json({\n          error: String(error2)\n        });\n        return;\n      }\n    } catch (error) {\n      res.status(401).json({\n        error: \"not_authenticated\",\n        description: \"The user does not have an active session or is not authenticated\"\n      });\n      return;\n    }\n  };\n}\n\n// src/utils/log.ts\nvar dev = \"development\" !== \"production\";\nvar logger = {\n  log: (message, ...optionalParams) => {\n    dev ? console.log(message, ...optionalParams) : null;\n  },\n  error: (message, ...optionalParams) => {\n    console.error(message, ...optionalParams);\n  },\n  info: (message, ...optionalParams) => {\n    logger.log(message, ...optionalParams);\n  },\n  debug: (message, ...optionalParams) => {\n    logger.log(message, ...optionalParams);\n  },\n  warn: (message, ...optionalParams) => {\n    dev ? logger.error(message, ...optionalParams) : null;\n  }\n};\nvar log_default = logger;\n\n// src/index.ts\nfunction createBrowserSupabaseClient({\n  cookieOptions\n} = {}) {\n  if (false) {}\n  return (0, import_auth_helpers_shared4.createBrowserSupabaseClient)({\n    supabaseUrl: \"https://pvxlglzyrpzakeenslvv.supabase.co\",\n    supabaseKey: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB2eGxnbHp5cnB6YWtlZW5zbHZ2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2Njk5ODgwMzAsImV4cCI6MTk4NTU2NDAzMH0.kkMEtfpuA5zZfS9rd6dFw9Feja3DjpZyG50J-WggNTc\",\n    cookieOptions\n  });\n}\nfunction createServerSupabaseClient4(context, {\n  cookieOptions\n} = {}) {\n  if (false) {}\n  return (0, import_auth_helpers_shared4.createServerSupabaseClient)({\n    supabaseUrl: \"https://pvxlglzyrpzakeenslvv.supabase.co\",\n    supabaseKey: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB2eGxnbHp5cnB6YWtlZW5zbHZ2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2Njk5ODgwMzAsImV4cCI6MTk4NTU2NDAzMH0.kkMEtfpuA5zZfS9rd6dFw9Feja3DjpZyG50J-WggNTc\",\n    getRequestHeader: (key) => context.req.headers[key],\n    getCookie(name) {\n      return context.req.cookies[name];\n    },\n    setCookie(name, value, options) {\n      var _a, _b;\n      const newSetCookies = (0, import_auth_helpers_shared4.filterCookies)(\n        (0, import_auth_helpers_shared4.ensureArray)((_b = (_a = context.res.getHeader(\"set-cookie\")) == null ? void 0 : _a.toString()) != null ? _b : []),\n        name\n      );\n      const newSessionStr = (0, import_auth_helpers_shared4.serializeCookie)(name, value, {\n        ...options,\n        httpOnly: false\n      });\n      context.res.setHeader(\"set-cookie\", [...newSetCookies, newSessionStr]);\n    },\n    options: {\n      global: {\n        headers: {\n          \"X-Client-Info\": `${PKG_NAME}@${PKG_VERSION}`\n        }\n      }\n    },\n    cookieOptions\n  });\n}\nfunction createMiddlewareSupabaseClient(context, {\n  cookieOptions\n} = {}) {\n  if (false) {}\n  return (0, import_auth_helpers_shared4.createServerSupabaseClient)({\n    supabaseUrl: \"https://pvxlglzyrpzakeenslvv.supabase.co\",\n    supabaseKey: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB2eGxnbHp5cnB6YWtlZW5zbHZ2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2Njk5ODgwMzAsImV4cCI6MTk4NTU2NDAzMH0.kkMEtfpuA5zZfS9rd6dFw9Feja3DjpZyG50J-WggNTc\",\n    getCookie(name) {\n      var _a;\n      const cookies = (0, import_auth_helpers_shared4.parseCookies)((_a = context.req.headers.get(\"cookie\")) != null ? _a : \"\");\n      return cookies[name];\n    },\n    setCookie(name, value, options) {\n      const newSessionStr = (0, import_auth_helpers_shared4.serializeCookie)(name, value, {\n        ...options,\n        httpOnly: false\n      });\n      context.req.headers.append(\"cookie\", newSessionStr);\n      context.res.headers.set(\"set-cookie\", newSessionStr);\n    },\n    getRequestHeader: (key) => {\n      var _a;\n      const header = (_a = context.req.headers.get(key)) != null ? _a : void 0;\n      return header;\n    },\n    options: {\n      global: {\n        headers: {\n          \"X-Client-Info\": `${PKG_NAME}@${PKG_VERSION}`\n        }\n      }\n    },\n    cookieOptions\n  });\n}\nfunction createServerComponentSupabaseClient({\n  headers,\n  cookies,\n  cookieOptions\n}) {\n  if (false) {}\n  return (0, import_auth_helpers_shared4.createServerSupabaseClient)({\n    supabaseUrl: \"https://pvxlglzyrpzakeenslvv.supabase.co\",\n    supabaseKey: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB2eGxnbHp5cnB6YWtlZW5zbHZ2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2Njk5ODgwMzAsImV4cCI6MTk4NTU2NDAzMH0.kkMEtfpuA5zZfS9rd6dFw9Feja3DjpZyG50J-WggNTc\",\n    getRequestHeader: (key) => {\n      const headerList = headers();\n      return headerList.get(key);\n    },\n    getCookie(name) {\n      var _a;\n      const nextCookies = cookies();\n      return (_a = nextCookies.get(name)) == null ? void 0 : _a.value;\n    },\n    setCookie() {\n    },\n    options: {\n      global: {\n        headers: {\n          \"X-Client-Info\": `${PKG_NAME}@${PKG_VERSION}`\n        }\n      }\n    },\n    cookieOptions\n  });\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@supabase/auth-helpers-nextjs/dist/index.js\n"));

/***/ })

});